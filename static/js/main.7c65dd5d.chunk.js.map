{"version":3,"sources":["redux/contanter.js","redux/Axios/home.js","ServerIP.js","redux/Reducer/home.js","redux/Reducer/video.js","redux/Reducer/group.js","redux/Reducer/vip.js","redux/Reducer/login.js","redux/Reducer/register.js","redux/Reducer/qrcode.js","redux/Reducer/index.js","redux/Reducer/me.js","redux/store.js","AppTool/index.js","containers/Rotation/index.js","redux/Axios/me.js","containers/Home/index.js","containers/Video/index.js","redux/Axios/video.js","containers/VideoList/index.js","containers/History/index.js","containers/GroupList/index.js","redux/Axios/vip.js","containers/Vip/index.js","components/Loding/index.js","containers/Me/index.js","redux/Axios/login.js","containers/Login/index.js","containers/Register/index.js","containers/SetUser/index.js","containers/Byvip/index.js","containers/QrCode/index.js","components/NavBar/index.js","App.js","redux/Axios/group.js","index.js"],"names":["UPHOMEDATA","UPPLAYVIDEO","UPGROUPS","UPVIP","UPMEINFO","UPLOGINSTATE","UPREGISTERSTATE","UPARCODE","uphomedata","data","type","ServerIP","PublicPort","initState","LoginState","Registerstate","combineReducers","home","preState","axios","pvideo","group","vip","me","login","register","qrcode","createStore","AllReducer","composeWithDevTools","GrapTypeVideos","arr","filter","video","viptype","MachArray","newArr","length","arr1","slice","push","shift","Explace","ARR","NewArr","min","forEach","a","ISOPENS","opens","store","getState","videoopens","ISDATE","date","newarr","Date","uptime","SORT","i","randomIndex","Math","floor","random","itemIndex","ISARR","bl","j","_id","ISARR2","arr2","Rotation","props","Uplen","number","prenumber","state","J","setInterval","clearInterval","accAdd","setState","arg1","arg2","r1","r2","m","c","toString","split","e","abs","pow","max","cm","Number","replace","Prelen","this","I","videos","className","style","width","transform","map","to","pathname","alt","src","videoimgurl","Component","connect","upmeinfo","Home","Upinfo","name","videocountry","videos3","videos1","videos2","videoArr1","videoArr2","videoArr3","active","setTimeout","defaultbuntton","click","token","cookie","load","post","qs","stringify","then","response","info","loginstate","user","window","confirm","history","catch","error","console","log","onClick","borderBottom","ref","n","id","undefined","videotime","videotitle","videouser","nanoid","Playvideo","PreVideoContainer","UpPlay","scrollTo","UpVideo","find","UpVideoLead","groups","lead","username","PlayVideoLead","back","pop","playvideo","VideoHistore","go","location","vipcolor1","border","vipcolor2","PlayNowVideo","PlayNowLead","testlead","userimgurl","userpage","uservideosurl","usercountry","VideoList","autoPlay","controlsList","eveter","poster","controls","playsInline","videouptimes","href","target","upplayvideo","goBack","Lead","List","videolist","videohistorys","arrvideo","videohistory","GroupList","LeadAll","upvip","Vip","VIP","vip1","price","vip2","vip3","Loding","Me","UpMeState","exit","remove","alert","viptime","uploginstate","Login","value","password","save","ErrorCode","placeholder","password2","code","RegisterInfo","msg","SetUser","Save","ME","prep","passwordpre","pwd1","password1","pwd2","Message","err","Byvip","msg1","msg2","play1","disabled","netplay","play2","playtype","ByData","Bytype","userid","play","gome","qr1","qr2","QRCode","require","Qrcode","gologin","backgroundimg","level","height","Index","activeclassname","path","component","Video","History","Register","App","datastate","Appdata","dispatch","sys","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c65dd5d.chunk.js","sourcesContent":["export const SAVEAPPDATA = 'saveAppdata';\nexport const SAVEPLAYVIDEO = 'saveAppdata';\nexport const SAVETOKEN = 'savetoken';\nexport const UPHOMEDATA = 'uphomedata';\nexport const UPPLAYVIDEO = 'upplayvideo';\nexport const UPGROUPS  = 'upgroups'\nexport const UPVIP = 'upvip'\nexport const UPMEINFO = 'upmeinfo'\nexport const UPLOGINSTATE = 'uploginstate'\nexport const UPREGISTERSTATE = 'upregisterstate'\nexport const UPARCODE = 'upqrcode'","// 是一个函数返回axios对象{type:'',data:''}\nimport {UPHOMEDATA} from '../contanter';\n\nexport const uphomedata = (data)=>{\n    return {type:UPHOMEDATA,data:data}\n}","export const ServerIP = 'www.kmbb.cc';\nexport const PublicPort= '80';\n","// reducer是一个函数接受两个参数 prestate 和 axios \nimport {UPHOMEDATA} from '../contanter';\n\nconst initState = []\nexport default function home(preState = initState,axios){\n    const {type,data} = axios\n    switch (type) {\n        case UPHOMEDATA:\n            return data;\n        default:\n            return preState;\n    }\n\n}","// reducer是一个函数接受两个参数 prestate 和 axios \nimport {UPPLAYVIDEO} from '../contanter';\n\nconst initState = []\nexport default function vdisplay(preState = initState,axios){\n    const {type,data} = axios\n    switch (type) {\n        case UPPLAYVIDEO:\n            return data;\n        default:\n            return preState;\n    }\n\n}","import {UPGROUPS} from '../contanter';\n\n\nconst initState = []\nexport default function group(preState= initState,axios){\n    const {type,data} = axios;\n    switch (type) {\n        case UPGROUPS:\n            return data\n\n        default:\n            return preState\n    }\n\n}","import {UPVIP} from '../contanter';\n\nconst initState = {}\nexport default function vip(preState=initState,axios){\n    const {type,data} = axios;\n    switch (type) {\n        case UPVIP:\n            return data;\n        default:\n            return preState;\n    }\n}","\nimport {UPLOGINSTATE} from '../contanter';\n\nconst initState = {LoginState:false,}\nexport default function login(preState=initState,axios){\n    const {type,data} = axios\n    switch (type) {\n        case UPLOGINSTATE:\n            return data\n    \n        default:\n            return preState;\n    }\n}","\nimport {UPREGISTERSTATE} from '../contanter';\n\nconst initState = {Registerstate:false}\nexport default function register(preState=initState,axios){\n    const {type,data} = axios\n    switch (type) {\n        case UPREGISTERSTATE:\n            return data\n    \n        default:\n            return preState;\n    }\n}","import {UPARCODE} from '../contanter';\n\nconst initState = {}\nexport default function vip(preState=initState,axios){\n    const {type,data} = axios;\n    switch (type) {\n        case UPARCODE:\n            return data;\n        default:\n            return preState;\n    }\n}","import {combineReducers} from 'redux'\nimport home from './home';\nimport pvideo from './video';\nimport group from './group';\nimport vip from './vip';\nimport me from './me';\nimport login from './login';\nimport register from './register';\nimport qrcode from './qrcode';\n\n\nexport default combineReducers({\n    home,pvideo,group,vip,me,login,register,qrcode\n});","// reducer是一个函数接受两个参数 prestate 和 axios \nimport {UPMEINFO} from '../contanter';\n\nconst initState = false\nexport default function vdisplay(preState = initState,axios){\n    const {type,data} = axios\n    switch (type) {\n        case UPMEINFO:\n            return data;\n        default:\n            return preState;\n    }\n\n}","// 引入用来创建store的类\nimport {createStore} from 'redux'\n//引入reducers\nimport AllReducer from './Reducer/index';\n// 引入开发工具\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n\n// 创建store并暴露\nexport default createStore(AllReducer,composeWithDevTools());","\nimport store from '../redux/store';\n\n\n// 过滤免费视频\nexport const GrapTypeVideos = (arr,type)=>{\n    return arr.filter((video)=>{\n        return video.viptype === type;\n    })\n}\n\n// 设置数组为二维数组\nexport const MachArray = (arr)=>{\n    var newArr = [];\n    while(arr.length!==0){\n        var arr1 =  arr.slice(0,2);\n        newArr.push(arr1);\n        arr.shift();\n        arr.shift();\n    }\n    return newArr;\n}\n//对二维数组进行排序大到小\nexport const Explace = (ARR)=>{\n    var NewArr = []\n    var min = []\n        ARR.forEach((a)=>{\n            if(a.length===1){\n                min = a\n            }else{\n                NewArr.push(a)\n            }\n        })\n\n    if(min.length===0){\n    }else{\n        NewArr.push(min);\n    }\n    \n    return NewArr;\n}\n // 进行播放量筛选（需要优化）\n export const ISOPENS = (arr)=>{\n    //  获取系统参数\n    const sys = store.getState().vip;\n    const opens = sys.opens;\n    const newarr = arr.filter((video)=>{\n            return video.videoopens>opens;\n        })\n    return newarr\n}\n// 进行日期天数筛选（需要优化）\nexport const ISDATE = (arr)=>{\n    // 获取系统参数\n    const sys = store.getState().vip;\n    const date = sys.date\n    const newarr = [];\n\n    arr.forEach((video)=>{\n        const today =  new Date();\n        const preday = new Date(video.uptime[0],video.uptime[1],video.uptime[2]);\n            if(today-preday <=(1000*60*60*24*date)){\n                newarr.push(video)\n            }\n        })\n    return newarr\n}\n// 选择20个视频\nexport const SELECT20 = (arr)=>{\n    return arr.slice(0,20);\n}\n// 打乱数组顺序\nexport const SORT = (arr)=>{\n    //首先从最大的数开始遍历，之后递减\n    for(var i = arr.length - 1; i >= 0; i--) {\n    //随机索引值randomIndex是从0-arr.length中随机抽取的\n        var randomIndex = Math.floor(Math.random() * (i + 1));\n    //下面三句相当于把从数组中随机抽取到的值与当前遍历的值互换位置\n        var itemIndex = arr[randomIndex];\n        arr[randomIndex] = arr[i];\n        arr[i] = itemIndex;\n    }\n    //每一次的遍历都相当于把从数组中随机抽取（不重复）的一个元素放到数组的最后面（索引顺序为：len-1,len-2,len-3......0）\n    return arr;\n}\n // 判断数组中是否有相同的\n export const  ISARR = (arr)=>{\n    var newArr = [];\n        for (var i = 0; i < arr.length; i++) {\n        var bl = true;\n            for (var j = 0; j < newArr.length; j++) {\n                if (arr[i]._id === newArr[j]._id) {\n                    bl = false;\n                break ;\n                }\n            }\n        if (bl) {\n        newArr.push(arr[i]);\n        }\n    }\n    return newArr;\n}\n// 判断两个数组是否有相同的元素\nexport const  ISARR2 = (arr1,arr2)=>{\n\n    var newArr = [];\n        for (var i = 0; i < arr1.length; i++) {\n        var bl = true;\n            for (var j = 0; j < arr2.length; j++) {\n                if (arr1[i]._id === arr2[j]._id) {\n                    bl = false;\n                break ;\n                }\n            }\n        if (bl) {\n        newArr.push(arr1[i]);\n        }\n    }\n\n    return newArr;\n}\n // 判断数组中是否有相同正在播放的视频\n export const ISARRPLAY = (arr,playnow)=>{\n    \n    const newArr= arr.filter((video)=>{\n        return video._id !== playnow._id;\n    })\n\n    return newArr;\n}\n // 进行视频分类选择\n export const ISGROUPS = (arr,name)=>{\n    const newarr = arr.filter((video)=>{\n            return video.videocountry===name;\n        })\n\n    return newarr\n}\n\n// 判断用户是否登陆\nexport const ISLOGIN  = (token,callback)=>{\n\n            \n    \n}","import React, { Component, Fragment } from 'react';\nimport {connect} from 'react-redux';\nimport {ServerIP,PublicPort} from '../../ServerIP';\nimport {SORT,ISOPENS,SELECT20} from '../../AppTool';\nimport {Link} from 'react-router-dom'\n\nclass Rotation extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnumber:0\n\t\t}\n\t}\n\n\n\n\tcomponentDidMount(){\n\t\t// 开启三秒钟切换一次\n\t\tvar Prelen = 0;\n\t\tvar Len = 100/20; \n\n\t\tthis.I = setInterval(() => {\n\t\t\tif(Prelen<95){\n\t\t\t\tthis.Uplen(Prelen)\n\t\t\t\tPrelen+=Len;\n\t\t\t}else{\n\t\t\t\tPrelen = 0;\n\t\t\t\tthis.setState({number:0})\n\t\t\t}\n\t\t}, 2200);\n\n\t}\n\n\tUplen  = (number)=>{\n\t\tvar prenumber = this.state.number;\n\t\tthis.J = setInterval(() => {\n\t\t\tif(!(prenumber>=number)){\n\t\t\t\tprenumber = this.accAdd(prenumber , 0.05);\n\t\t\t\tthis.setState({number:prenumber})\n\n\t\t\t}else{\n\t\t\t\tclearInterval(this.J)\n\t\t\t}\n\t\t},5);\n\n\t}\n\n\t// 精确加法：\n\taccAdd = (arg1, arg2)=>{\n\t\tvar r1, r2, m, c;\n\t\ttry {\n\t\t\tr1 = arg1.toString().split(\".\")[1].length;\n\t\t}\n\t\tcatch (e) {\n\t\t\tr1 = 0;\n\t\t}\n\t\ttry {\n\t\t\tr2 = arg2.toString().split(\".\")[1].length;\n\t\t}\n\t\tcatch (e) {\n\t\t\tr2 = 0;\n\t\t}\n\t\tc = Math.abs(r1 - r2);\n\t\tm = Math.pow(10, Math.max(r1, r2));\n\t\tif (c > 0) {\n\t\t\tvar cm = Math.pow(10, c);\n\t\t\tif (r1 > r2) {\n\t\t\t\targ1 = Number(arg1.toString().replace(\".\", \"\"));\n\t\t\t\targ2 = Number(arg2.toString().replace(\".\", \"\")) * cm;\n\t\t\t} else {\n\t\t\t\targ1 = Number(arg1.toString().replace(\".\", \"\")) * cm;\n\t\t\t\targ2 = Number(arg2.toString().replace(\".\", \"\"));\n\t\t\t}\n\t\t} else {\n\t\t\targ1 = Number(arg1.toString().replace(\".\", \"\"));\n\t\t\targ2 = Number(arg2.toString().replace(\".\", \"\"));\n\t\t}\n\t\treturn (arg1 + arg2) / m;\n\t}\n\n\n\tcomponentWillUnmount(){\n\t\tclearInterval(this.I)\n\t\tclearInterval(this.J)\n\t}\n\n\n\nrender() {\n\t\tconst  videos = SELECT20(this.props.videos);\n        return (\n            <Fragment>\n\t\t\t<div className=\"scroller\">\n\t\t\t\t<div className=\"inner\" style={\n\t\t\t\t{\n\t\t\t\t\twidth:`${videos.length *100}%`,\n\t\t\t\t\ttransform:`translateX(-${this.state.number}%)`\n\t\t\t\t}}>\n\t\t\t\t\t{videos.map((video)=>{\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Link to={{pathname:'/video',state:video}} key={video._id}>\n\t\t\t\t\t\t\t\t<img className='imgs' style={{width:`${100/videos.length}%`}} alt=\"\" src={`http://${ServerIP}:${PublicPort}${video.videoimgurl}`}/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n            </Fragment>\n        );\n    }\n}\n\n\n\n\nexport default connect(\n    state =>({videos:SORT(ISOPENS(state.home))}),\n    {}\n)(Rotation)","import {UPMEINFO} from '../contanter';\n\nexport const upmeinfo = (data)=>{\n    return {type:UPMEINFO,data:data}\n}","import React, { Component, Fragment } from 'react';\nimport {connect} from 'react-redux';\nimport {uphomedata} from '../../redux/Axios/home';\nimport {ServerIP,PublicPort} from '../../ServerIP';\nimport {ISGROUPS} from '../../AppTool';\nimport {MachArray,ISARR,ISARR2,SORT,ISDATE,ISOPENS,Explace,GrapTypeVideos} from '../../AppTool';\nimport {Link} from 'react-router-dom'\nimport Rotation from '../../containers/Rotation';\nimport {nanoid} from 'nanoid';\nimport qs from 'qs'\nimport axios from 'axios';\nimport cookie from 'react-cookies'\nimport {upmeinfo} from '../../redux/Axios/me';\n\n\n\n\n\nclass Home extends Component {\n\n    \n\n     constructor(props){\n        super(props)\n        const videos1 = Explace(MachArray(ISARR(ISDATE(props.videos))));\n        const videos2 = Explace(MachArray(ISARR(ISOPENS(ISARR2(props.videos,videos1)))));\n        const videos3 = MachArray(GrapTypeVideos(props.videos,'游客'))\n           \n        this.state = {\n            active:0,\n            videos1:videos1,\n            videos2:videos2,\n            videos3:videos3\n        }\n        \n        setTimeout(() => {\n            this.defaultbuntton.click()\n        }, 10);\n\n    }\n\n    componentDidMount(){\n\n        const token = cookie.load(\"token\");\n        axios.post(`http://${ServerIP}:${PublicPort}/ISLOGIN`,qs.stringify({token}))\n        .then((response) => {\n            const info = response.data;\n            if(info.state){\n                this.setState({loginstate:true})\n                this.props.upmeinfo(info.user)\n            }else{\n                if (window.confirm(\"您尚未登录、视频无法观看、是否去登录\")) {\n                    this.props.history.push('/me')\n                } \n            }\n          }).catch((error) => {\n            console.log('网络请求失败',error)\n          });\n\n    }\n\n\n    Upinfo = (type)=>{\n\n        var i = 0;\n        switch (type) {\n            case '国内':\n                i=1\n                break;\n            case '美国':\n                i=2\n                break;\n            case '韩国':\n                i=3\n                break;\n            case '日本':\n                i=4\n                break;\n            default:\n                break;\n        }\n\n\n        const videos = ISGROUPS(this.props.videos,type);\n\n        const videos3 = SORT(GrapTypeVideos(videos,\"游客\"))\n        const videos1 = ISARR2(ISARR(ISDATE(videos)),videos3);\n        const videos2 = ISARR2(ISARR(ISOPENS(ISARR2(videos,videos1))),videos3);\n        \n        const videoArr1 = MachArray(videos1)\n        const videoArr2 = MachArray(videos2)\n        const videoArr3 = MachArray(videos3)\n\n        this.setState({active:i,videos1:videoArr1,videos2:videoArr2,videos3:videoArr3})\n   \n   \n    }\n\n\n    render() {\n        return (\n            <Fragment>\n            {/* 导航区 */}\n            <div>\n                <div className =\"heardercontainer titlereduib\">\n                        <h3 className=\"hearder \">首页</h3>\n                </div>\n                <ul className=\"selectUl\">\n                    <li className=\"selectLi\"><button onClick={()=>{this.Upinfo('国内')}} className='selectA' style={this.state.active===1?{borderBottom:\"solid red 1px\"}:{}} ref={(n)=>{this.defaultbuntton=n}}>亚洲</button></li>\n                    <li className=\"selectLi\"><button onClick={()=>{this.Upinfo('美国')}} className='selectA' style={this.state.active===2?{borderBottom:\"solid red 1px\"}:{}}>欧美</button></li>\n                    <li className=\"selectLi\"><button onClick={()=>{this.Upinfo('韩国')}} className='selectA' style={this.state.active===3?{borderBottom:\"solid red 1px\"}:{}}>韩国</button></li>\n                    <li className=\"selectLi\"><button onClick={()=>{this.Upinfo('日本')}} className='selectA' style={this.state.active===4?{borderBottom:\"solid red 1px\"}:{}}>日本</button></li>\n                </ul>\n            </div>\n\n\n\n            <div className='segments-page1' id='scroll1'>  \n\n            <div className='SlideContainer'>\n                <Rotation videos2={SORT(this.state.videos2)}/>\n            </div>\n                    <br/>\n                    {/* 体验视频 */}\n                    <div className=\"new-video segments\">\n                            <div className=\"container\">\n\n                                <div className=\"section-title\">\n                                    <h3 className=\"titlecolor\">体验区</h3>\n                                </div>\n\n                                {   \n                                    this.state.videos3!==undefined?Explace(this.state.videos3).map((videos)=>{\n                                        return(\n                                        <div className=\"row\" key={nanoid()}>\n\n                                        { videos.map((video)=>{\n                                                    return(\n                                                                <div className=\"col s6\" key={video._id}>\n                                                                    <div className=\"content videoitem\" >\n                                                                            <Link className=\"image\" to={{pathname:'/video',state:video}}>   {/*视频地址*/}\n                                                                                <img className='videosimg' src={`http://${ServerIP}:${PublicPort}${video.videoimgurl}`}  alt=\"Error\"/>\n                                                                                <div className=\"time\">{video.videotime}</div>\n                                                                            </Link>\n                                                                            <Link to={{pathname:'/video',state:video}}><h6 className='titletext'>{video.videotitle}</h6></Link>\n\n                                                                            <p className='testcent'>作者:&nbsp;{video.videouser}</p>\n\n                                                                            <p className=\"date testcent\">\n                                                                            <span>{video.videoopens}&nbsp;观看</span> \n                                                                            &nbsp;{video.uptime[0]}/{video.uptime[1]+1}/{video.uptime[2]}\n                                                                            </p>\n                                                                    </div>\n                                                                </div>\n\n                                                    )\n                                                })\n                                        }\n                                        </div>\n                                        \n                                    )\n\n                                            \n                                    }):console.log('Videos1数据不是数组!')\n                                }    \n                                </div>\n                            </div>\n\n                    <br/>\n                    {/* 热门视频 */}\n                            <div className=\"new-video segments\">\n                            <div className=\"container\">\n\n                                <div className=\"section-title\">\n                                    <h3 className=\"titlecolor\">新视频</h3>\n                                </div>\n\n                                {   \n                                    this.state.videos1!==undefined?Explace(this.state.videos1).map((videos)=>{\n                                        return(\n                                        <div className=\"row\" key={nanoid()}>\n\n                                        { videos.map((video)=>{\n                                                    return(\n                                                                <div className=\"col s6\" key={video._id}>\n                                                                    <div className=\"content videoitem\" >\n                                                                            <Link className=\"image\" to={{pathname:'/video',state:video}}>   {/*视频地址*/}\n                                                                                <img className='videosimg' src={`http://${ServerIP}:${PublicPort}${video.videoimgurl}`}  alt=\"Error\"/>\n                                                                                <div className=\"time\">{video.videotime}</div>\n                                                                            </Link>\n                                                                            <Link to={{pathname:'/video',state:video}}><h6 className='titletext'>{video.videotitle}</h6></Link>\n\n                                                                            <p className='testcent'>作者:&nbsp;{video.videouser}</p>\n\n                                                                            <p className=\"date testcent\">\n                                                                            <span>{video.videoopens}&nbsp;观看</span> \n                                                                            &nbsp;{video.uptime[0]}/{video.uptime[1]+1}/{video.uptime[2]}\n                                                                            </p>\n                                                                    </div>\n                                                                </div>\n\n                                                    )\n                                                })\n                                        }\n                                        </div>\n                                        \n                                    )\n\n                                            \n                                    }):console.log('Videos1数据不是数组!')\n                                }    \n                                </div>\n                            </div>\n\n                            <br/>\n\n                    {/* 热门视频 */}\n                            <div className=\"new-video segments\">\n                            <div className=\"container\">\n\n                                <div className=\"section-title\">\n                                    <h3 className=\"titlecolor\">热门视频</h3>\n                                </div>\n\n                                {   \n                                    this.state.videos2!==undefined?Explace(this.state.videos2).map((videos)=>{\n                                        return(\n                                        <div className=\"row\" key={nanoid()}>\n\n                                        {  videos.map((video)=>{\n                                                    return(\n                                                                <div className=\"col s6\" key={video._id}>\n                                                                    <div className=\"content videoitem\" >\n                                                                            <Link className=\"image\" to={{pathname:'/video',state:video}}>   {/*视频地址*/}\n                                                                                <img className='videosimg' src={`http://${ServerIP}:${PublicPort}${video.videoimgurl}`}  alt=\"Error\" />\n                                                                                <div className=\"time\">{video.videotime}</div>\n                                                                            </Link>\n                                                                            <Link to={{pathname:'/video',state:video}}><h6 className='titletext'>{video.videotitle }</h6></Link>\n\n                                                                            <p className='testcent'>作者:&nbsp;{video.videouser}</p>\n\n                                                                            <p className=\"date testcent\">\n                                                                            <span>{video.videoopens}&nbsp;观看</span> \n                                                                            &nbsp;{video.uptime[0]}/{video.uptime[1]+1}/{video.uptime[2]}\n                                                                            </p>\n                                                                    </div>\n                                                                </div>\n\n                                                    )\n                                                })\n                                        }\n                                        </div>\n                                        \n                                    )\n                                            \n                                    }):console.log('Videos1数据不是数组!')\n                                }   \n                                </div>\n                            </div>\n                                <div className='textcenter'>\n                                    <h3 className='textcolor'>更多视频尽情期待更新...</h3>\n                                </div>\n                               \n                </div>\n\n   </Fragment>\n\n        );\n    }\n}\n\n\n// 连接并暴露容器\nexport default connect(\n    state=>({videos:SORT(state.home)}),\n    {uphomedata,upmeinfo}\n)(Home)","import {connect} from 'react-redux';\nimport React, { Component, Fragment } from 'react';\nimport {Link} from 'react-router-dom'\nimport {ServerIP,PublicPort} from '../../ServerIP';\nimport {ISARR,SORT,ISOPENS} from '../../AppTool';\nimport {upplayvideo} from '../../redux/Axios/video';\nimport cookie from 'react-cookies'\nimport qs from 'qs'\nimport axios from 'axios';\nimport {upmeinfo} from '../../redux/Axios/me';\n\n\n\nclass video extends Component {\n    state = {\n        Playvideo:{},\n        PreVideoContainer:[]\n    }\n    //构造函数\nconstructor(props) {   \n\n\n            super(props);    \n            //1、正在播放的视频对象\n            const Playvideo = this.props.location.state===undefined?this.props.videos[[Math.floor(Math.random()*(this.props.videos.length-1)+1)]]:this.props.location.state;\n            this.state = {\n                Playvideo:Playvideo,\n                PreVideoContainer:[Playvideo],\n            }\n    }\n\nUpPlay = (id)=>{\n        window.scrollTo(0,0);\n\n    \n        // 获取要更改的视频\n        const UpVideo = this.props.videos.find((video)=>{\n            return video._id===id\n        });\n\n        // 获取要更改的视频主角\n        const UpVideoLead = this.props.groups.find((lead)=>{\n            return lead.username===UpVideo.videouser;\n        });\n\n        // 获取状态中的历史记录\n        var PreVideoContainer = this.state.PreVideoContainer;\n        PreVideoContainer.push(UpVideo)\n        this.setState({Playvideo:UpVideo,PlayVideoLead:UpVideoLead});\n        this.Playvideo.load();      //加载视频\n    }\n\n\n    componentDidMount(){\n\n        const token = cookie.load(\"token\");\n        axios.post(`http://${ServerIP}:${PublicPort}/ISLOGIN`,qs.stringify({token}))\n        .then((response) => {\n            const info = response.data;\n            if(info.state){\n                this.setState({loginstate:true})\n                this.props.upmeinfo(info.user)\n            }else{\n                if (window.confirm(\"您尚未登录、视频无法观看、是否去登录\")) {\n                    this.props.history.push('/me')\n                } \n            }\n          }).catch((error) => {\n            console.log('网络请求失败',error)\n          });\n\n    }\n\nback = ()=>{\n    var PreVideoContainer = this.state.PreVideoContainer; //获取历史视频容器\n    PreVideoContainer.pop();\n    var playvideo = PreVideoContainer[PreVideoContainer.length-1];\n    if(PreVideoContainer.length!==0){\n        this.setState({Playvideo:playvideo,VideoHistore:PreVideoContainer});\n    }else{\n        this.props.history.go(-1);\n    }\n\n}\n\nrender() {\n\n    const vipcolor1  = {border:\"solid 2px Gold\"};\n    const vipcolor2  = {border:\"solid 2px Silver\"};\n    window.scrollTo(0,0);\n\n    // const {Lead}  = this.state;\n    const token = cookie.load(\"token\");\n    //1、正在播放的视频对象\n    const PlayNowVideo = this.state.Playvideo;  \n\n\n    //2、获取正在播放的视频lead\n    var PlayNowLead = {}\n    const testlead =  this.props.groups.find((lead)=>{\n        return lead.username === PlayNowVideo.videouser;\n    })\n    if(testlead!==undefined){\n        PlayNowLead = testlead;\n    }else{\n        PlayNowLead = {\n            username:\"\",\n            userimgurl:\"\",\n            userpage:\"\",\n            uservideosurl:\"\",\n            usercountry:\"\"\n        }\n    }\n    // 3、获取热门的视频\n    const VideoList = ISARR(SORT(ISOPENS(this.props.videos)));\n\n    return (\n            <Fragment>\n            \n            <div className =\"heardercontainer titlereduib\">\n                <div className=\"navBar1\">\n                    <span onClick={this.back} className=\"backsize1\" \n                    id=\"top\">\n                            {\"< \"}\n                    </span>\n                    <span onClick={this.back} className=\"backsize2\">\n                            {\"返回\"}\n                    </span>\n                </div>\n            </div>\n\n            <hr/>\n        \n    {/* <!-- video single --> */}\n    <div ref=\"scr\" className=\"video-single segments-pagev videotop\"  id=\"video\">\n            \n\n\n\n            <div className=\"containervideo\">\n            {/* 播放视屏窗口 */}\n                    <div className='video viplist'>\n                        <video  autoPlay controlsList=\"nodownload\" ref={(eveter)=>{this.Playvideo=eveter}} className=\"video2\" poster={`http://${ServerIP}:${PublicPort}${PlayNowVideo.videoimgurl}`} controls x5-playsinline=\"true\" playsInline webkit-playsinline=\"true\" x-webkit-airplay=\"true\" x5-video-orientation=\"portraint\">{/*${video.videoimgurl}*/}\n                            <source src={`http://${ServerIP}:${PublicPort}/playvideo?videoid=${PlayNowVideo._id}&token=${token}`} type=\"video/mp4\"/>{/*${video.videourlplay}*/}\n                                \n                </video>   \n\n                    </div>\n\n                    {/*视屏信息  */}\n                            <div className=\"content-text\">\n                                        <div className=\"video-title \">\n                                            <h5 className='textcolor'>{PlayNowVideo.videotitle}</h5> \n                                            <p>{PlayNowVideo.videoopens}&nbsp;观看<span>{PlayNowVideo.videouptimes}</span></p> \n                                            <br/>\n                    {/* 主角信息 */}\n                                            <div className=\"video-author\">\n                                            <Link  to={{pathname:\"/videolist\",state:{lead:PlayNowLead}}}>       {/*跳转主角的列表*/}\n                                                <img src={`http://${ServerIP}:${PublicPort}${PlayNowLead.userimgurl}`} alt=\"Error\"/>\n                                            </Link>\n                                            <Link to={{pathname:\"/videolist\",state:{lead:PlayNowLead}}}>  \n                                                    <h6 className='textcolor'>{PlayNowLead.username}</h6>       \n                                                </Link>\n                                                <p className=\"date\">{PlayNowLead.usercountry}</p>   \n                                            </div>\n                                            <div className=\"video-desc\">\n                                                <p>\n                                                    {PlayNowLead.userpage}\n                                                    </p>    \n                                            </div>\n                                        </div>\n                                </div>        \n            </div>\n\n\n\n\n                    {/* 推荐视频 STATE*/}\n                    <div className=\"new-video-list trending-video\" >\n                        <div className=\"container\" >\n                            <div className=\"section-title \">\n                                <h3 className='textcolor'>推荐视频</h3>\n                            </div>\n\n                            {\n                                \n                                VideoList.map((video)=>{\n                                    return (\n                                        <a href=\"#video\" key={video._id}>\n                                    <div className=\"row\">\n                                        <div className=\"col s6\">\n                                            <div className=\"image\">\n                                                <div onClick={()=>{this.UpPlay(video._id)}}  target=\"_self\">                      \n                                                    <img className='viplist' src={`http://${ServerIP}:${PublicPort}${video.videoimgurl}`} alt=\"Error\" style={video.viptype===\"黄金会员\"?vipcolor1:video.viptype===\"白银会员\"?vipcolor2:{}}/>     \n                                                    <div className=\"time\">{video.videotime}</div>\n                                                </div></div>\n                                        </div>\n                                        <div className=\"col s6\">\n                                            <div className=\"text\">\n                                                <span onClick={()=>{this.UpPlay(video._id)}}>\n                                                    <h5 className='titletextcolor'>{video.videotitle}</h5>\n                                                </span>\n                                                <p className=\"date\">{video.uptime[0]}/{video.uptime[1]+1}/{video.uptime[2]}</p>\n                                                <p className='textcolor'>{video.videoopens}&nbsp; 观看</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    </a>\n                                    )\n\n                                })\n                            }\n                                    \n                        </div>\n                    </div>\n\n        </div>\n            </Fragment>\n        )\n\n}\n}\n\nexport default connect(\n    state =>({videos:state.home,groups:state.group}),\n    {upplayvideo,upmeinfo}\n)(video)\n\n","import {UPPLAYVIDEO} from '../contanter';\n\nexport const upplayvideo = (data)=>{\n    return {type:UPPLAYVIDEO,data:data}\n}","import React, { Component,Fragment } from 'react';\nimport {connect} from 'react-redux';\nimport {ServerIP,PublicPort} from '../../ServerIP'\nimport {Link} from 'react-router-dom'\n\nclass VideoList extends Component {\n    \n    constructor(props){\n        super(props)\n\t\t// 用于操作历史的对象\n\t\tconst  history = this.props.history;\n\t\tconst  Lead = this.props.location.state.lead;\n\t\t// 获取说有视频\n\t\tconst videos = this.props.videos;\n\n\n\t\t// 扫描匹配的视频\n\t\tconst List = videos.filter((video)=>{\n\t\t\treturn video.videouser === Lead.username;\n\t\t})\n\n\t\t\n\t\tthis.state = {\n\t\t\thistory:history,\n\t\t\tlead:Lead,\n\t\t\tvideolist:List\n\t\t}\n\n\n    }\n\n\t// 返回\n\tback = ()=>{\n\t\tthis.state.history.goBack();\n\t}\n\n\n    render() {\n\n        window.scrollTo(0,0);\n\t\tconst vipcolor1  = {border:\"solid 2px Gold\"};\n        const vipcolor2  = {border:\"solid 2px Silver\"};\n        return (\n            <Fragment>\n\t\t\t <div className =\"heardercontainer titlereduib\">\n            {/* <header className=\"narbaheader\"> */}\n                <div className=\"navBar1\">\n                    <span onClick={this.back} className=\"backsize1\" >\n                            {\"< \"}\n                    </span>\n                    <span onClick={this.back} className=\"backsize2\">\n                            {\"返回\"}\n                    </span>\n                </div>\n\t\t\t{/* </header> */}\n\t\t\t</div>\n\n            <hr/>\n            {/* <br/> */}\n{/* 视频列表 */}\n\n\t\t<div className=\"new-video-list trending-video\">\n\t\t\t<div className=\"containergrouplist\">\n\n\t\t\t\n\t\t\t{\n\t\t\t\tthis.state.videolist.map((video)=>{\n\t\t\t\t\treturn(\n\n\t\t\t\t\t\t<div className=\"row grouprow textcolor\" key={video._id}>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t<div className=\"image \">\n\t\t\t\t\t\t\t<Link className=\"image\" to={{pathname:'/video',state:video}}> \n\t\t\t\t\t\t\t\t<img className='viplist' src={`http://${ServerIP}:${PublicPort}${video.videoimgurl}`} alt=\"Error\" style={video.viptype===\"黄金会员\"?vipcolor1:video.viptype===\"白银会员\"?vipcolor2:{}}/>\n\t\t\t\t\t\t\t\t<div className=\"time\">{video.videotime}</div>\n\t\t\t\t\t\t\t</Link></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<div className=\"text\">\n\t\t\t\t\t\t\t\t\t<Link to={{pathname:'/video',state:video}}>\n\t\t\t\t\t\t\t\t\t\t<h5 className='titletextcolor'>{video.videotitle}</h5>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<p className=\"date textcolor\">{video.videoopens}&nbsp;观看</p>\n\t\t\t\t\t\t\t\t\t<p className='textcolor'>{video.videouptimes}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t\t\n\t\t\t</div>\n\n\t\t</div>\n\n            </Fragment>\n\n\t\t\t\t\t\t\t\n        )\n    }\n}\n\nexport default connect(\n    state =>({videos:state.home}),\n    {}\n)(VideoList)\n","import React, { Component,Fragment } from 'react';\nimport {connect} from 'react-redux';\nimport {ServerIP,PublicPort} from '../../ServerIP'\nimport {Link} from 'react-router-dom'\n\nclass VideoList extends Component {\n    \n    constructor(props){\n        super(props)\n\t\t// 用于操作历史的对象\n\t\tconst  history = this.props.history;\n\t\tconst  videohistorys = this.props.arrvideo;\n\n\t\t// 获取说有视频\n\t\tconst videos = this.props.videos;\n\t\t// 扫描匹配的视频\n\t\tvar List = []\n\t\tfor(var i = 0;i<videohistorys.length;i++){\n\t\t\tfor(var j = 0;j<videos.length;j++){\n\t\t\t\tif(videohistorys[i]===videos[j]._id){\n\t\t\t\t\tList.push(videos[j])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.state = {\n\t\t\thistory:history,\n\t\t\tvideolist:List\n\t\t}\n    }\n\n\t// 返回\n\tback = ()=>{\n\t\tthis.state.history.goBack();\n\t}\n\n\n    render() {\n\n        window.scrollTo(0,0);\n\t\tconst vipcolor1  = {border:\"solid 2px Gold\"};\n        const vipcolor2  = {border:\"solid 2px Silver\"};\n        return (\n            <Fragment>\n\t\t\t <div className =\"heardercontainer titlereduib\">\n            {/* <header className=\"narbaheader\"> */}\n                <div className=\"navBar1\">\n                    <span onClick={this.back} className=\"backsize1\" >\n                            {\"< \"}\n                    </span>\n                    <span onClick={this.back} className=\"backsize2\">\n                            {\"返回\"}\n                    </span>\n                </div>\n\t\t\t{/* </header> */}\n\t\t\t</div>\n\n            <hr/>\n            {/* <br/> */}\n{/* 视频列表 */}\n\n\t\t<div className=\"new-video-list trending-video\">\n\t\t\t<div className=\"containergrouplist\">\n\n\t\t\t\n\t\t\t{\n\t\t\t\tthis.state.videolist.length===0 ?<div className='textcenter'><h4 className='textcolor'>没有观看记录...</h4></div>  :this.state.videolist.map((video)=>{\n\t\t\t\t\treturn(\n\n\t\t\t\t\t\t<div className=\"row grouprow textcolor\" key={video._id}>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t<div className=\"image \">\n\t\t\t\t\t\t\t<Link className=\"image\" to={{pathname:'/video',state:video}}> \n\t\t\t\t\t\t\t\t<img className='viplist' src={`http://${ServerIP}:${PublicPort}${video.videoimgurl}`} alt=\"Error\" style={video.viptype===\"黄金会员\"?vipcolor1:video.viptype===\"白银会员\"?vipcolor2:{}}/>\n\t\t\t\t\t\t\t\t<div className=\"time\">{video.videotime}</div>\n\t\t\t\t\t\t\t</Link></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<div className=\"text\">\n\t\t\t\t\t\t\t\t\t<Link to={{pathname:'/video',state:video}}>\n\t\t\t\t\t\t\t\t\t\t<h5 className='titletextcolor'>{video.videotitle}</h5>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<p className=\"date textcolor\">{video.videoopens}&nbsp;观看</p>\n\t\t\t\t\t\t\t\t\t<p className='textcolor'>{video.videouptimes}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t\t\n\t\t\t</div>\n\n\t\t</div>\n\n            </Fragment>\n\n\t\t\t\t\t\t\t\n        )\n    }\n}\n\nexport default connect(\n    state =>({videos:state.home,arrvideo:state.me.videohistory}),\n    {}\n)(VideoList)\n","import React, { Component ,Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport { Link} from 'react-router-dom'\nimport {ServerIP,PublicPort} from '../../ServerIP'\n\n\nclass GroupList extends Component {\n\n\n    render() {\n        window.scrollTo(0,0);\n        // 重redux中获取数据：\n        const LeadAll = this.props.groups;\n        return (\n            <Fragment>\n                 <div className =\"heardercontainer titlereduib\">\n                     <h3 className=\"hearder\">主角列表</h3>\n                </div>\n\n                    \t{/* <!-- list --> */}\n                        <div className=\"list segments-page1\">\n                            <div className=\"containergroup\"> \n\n                            {\n                                LeadAll.map((lead)=>{\n                                return ( \n                                    \n                                    <Link  to={{pathname:\"/videolist\",state:{lead}}} key={lead._id}>\n                                        <div className=\"contents contentslist\">\n                                                <div className=\"list-img\"><img src={`http://${ServerIP}:${PublicPort}${lead.userimgurl}`} alt=\"\"/></div>\n                                                <div className=\"list-text\">\n                                                    <h6 className='textcolor'>{lead.username}</h6>\n                                                    <p>{lead.userpage}</p>\n                                                </div>\n                                        </div>\n                                    </Link>\n\n                                )\n                                })\n                            }\n                        \n                            </div>\n                        </div>\n\n            </Fragment>\n        )\n    }\n}\n\n\n\nexport default connect(\n    state=>({groups:state.group}),\n    {}\n)(GroupList)","import {UPVIP} from '../contanter';\n\nexport const upvip = (data)=>{\n    return {type:UPVIP,data:data}\n}","import React, { Component ,Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {upvip} from '../../redux/Axios/vip';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport cookie from 'react-cookies'\nimport {PublicPort,ServerIP} from '../../ServerIP';\nimport qs from 'qs'\nimport {upmeinfo} from '../../redux/Axios/me';\n\n\n\n\nclass Vip extends Component {\n    state  = {\n        loginstate:false\n    }\n\n\n    componentDidMount(){\n        const token = cookie.load(\"token\");\n            axios.post(`http://${ServerIP}:${PublicPort}/ISLOGIN`,qs.stringify({token}))\n            .then((response) => {\n                const info = response.data;\n                if(info.state){\n                    this.setState({loginstate:true})\n                    this.props.upmeinfo(info.user)\n                }else{\n                    // this.props.history.push(\"/login\");\n                }\n              }).catch((error) => {\n                console.log('网络请求失败',error)\n              });\n    }\n\n    render() {\n        const VIP = this.props.vip;\n        return (\n            \n            <Fragment>\n\n                    <div className =\"heardercontainer titlereduib\">\n                        <h3 className=\"hearder\">会员列表</h3>\n                    </div>\n\n                    <div className=\"segments-page\">\n                        <div className=\"container\">\n                            <div className=\"pricing-table\">\n\n                                <div className=\"row\">\n\n\n\n                                    <div className=\"col s6 \">\n                                        <div className=\"contents z-depth-1 center viplist\">\n                                            <h5 className='titlecolor'>邀请好友注册</h5>\n                                            <h4>5个人<span className='viptitlecolor'>/月</span></h4>\n                                            <ul>\n                                                {/* <li>以您的邀请码</li> */}\n                                                <li>邀请好友成为普通会员</li>\n                                                <li>普通传输带宽</li>\n                                                <li>可以观看:</li>\n                                                <li>普通会员视频</li>\n                                            </ul><Link className=\"button z-depth-1 vipbtn\" to={{pathname:\"/vipqr\",state:{loginstate:this.state.loginstate}}}>获取邀请码</Link>\n                                        </div>\n                                    </div>\n\n\n\n                                    <div className=\"col s6 \">\n                                        <div className=\"contents z-depth-1 center viplist\">\n                                            <h5 className='titlecolor'>普通会员</h5>\n                                            <h4>${VIP.vip1} <span className='viptitlecolor'>/月</span></h4>\n                                            <ul>\n                                                <li>Experience</li>\n                                                <li>普通传输带宽</li>\n                                                <li>可以观看:</li>\n                                                <li>普通会员视频</li>\n                                                \n                                            </ul><Link className=\"button z-depth-1 vipbtn\" to={{pathname:\"/byvip\",state:{price:VIP.vip1,type:\"普通会员\",loginstate:this.state.loginstate}}}>立即购买</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n\n\n\n                                    <div className=\"col s6 \">\n                                        <div className=\"contents z-depth-1 center viplist\">\n                                            <h5 className='titlecolor'>白银会员</h5>\n                                            <h4>${VIP.vip2} <span className='viptitlecolor'>/月</span></h4>\n                                            <ul>\n                                                <li>Experience</li>\n                                                <li>普通传输带宽</li>\n                                                <li>可以观看:</li>\n                                                <li>白银会员视频</li>\n                                                </ul><Link className=\"button z-depth-1 vipbtn\" to={{pathname:\"/byvip\",state:{price:VIP.vip2,type:\"白银会员\",loginstate:this.state.loginstate}}}>立即购买</Link>\n                                        </div>\n                                    </div>\n\n\n\n                                    <div className=\"col s6 \">\n                                        <div className=\"contents z-depth-1 center viplist\">\n                                            <h5 className='titlecolor'>黄金会员</h5>\n                                            <h4>${VIP.vip3} <span className='viptitlecolor'>/月</span></h4>\n                                            <ul>\n                                                <li>Experience</li>\n                                                <li>高速高清带宽享用</li>\n                                                <li>可以观看:</li>\n                                                <li>站内所有视频</li>\n\n                                            </ul><Link className=\"button z-depth-1 vipbtn\" to={{pathname:\"/byvip\",state:{price:VIP.vip3,type:\"黄金会员\",loginstate:this.state.loginstate}}}>立即购买</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n          \n\n\n                          <div className='lings' style={{\"textAlign\":\"center\"}}>\n                                 <br/>\n                                 <br/>\n                                 <br/>\n                                 <h6 className='textcolor2'>-</h6>\n                            </div>\n          \n            </Fragment>\n        \n        \n        );\n    }\n}\n\n\nexport default connect(\n    state=>({vip:state.vip}),\n    {upvip,upmeinfo}\n)(Vip)","import React, { Component, Fragment } from 'react'\n\nexport default class Loding extends Component {\n    render() {\n        return (\n            <Fragment>\n              {/* <!-- preloader --> */}\n                <div className=\"preloader textcolor2\">\n                    <div className=\"spinner\"></div>\n                </div>\n                {/* <!-- end preloader --> */}\n\n            </Fragment>\n        )\n    }\n}\n","import React, { Component ,Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport qs from 'qs'\nimport axios from 'axios';\nimport {PublicPort,ServerIP} from '../../ServerIP';\nimport {upmeinfo} from '../../redux/Axios/me';\nimport {Link} from 'react-router-dom'\nimport cookie from 'react-cookies'\nimport Loding from '../../components/Loding';\n\n\n\n\n\n\nclass Me extends Component {\n    \n        state = {\n            loginstate:false,\n        }\n\n        componentDidMount(){\n            const token = cookie.load(\"token\");\n            axios.post(`http://${ServerIP}:${PublicPort}/ISLOGIN`,qs.stringify({token}))\n            .then((response) => {\n                const info = response.data;\n                if(info.state){\n                    this.setState({loginstate:true})\n                    this.props.upmeinfo(info.user)\n                }else{\n                    this.props.history.push(\"/login\");\n                }\n              }).catch((error) => {\n                console.log('网络请求失败',error)\n              });\n\n        }\n\n\n\n\n        UpMeState = (state)=>{\n            this.setState({loginstate:true})\n        }\n\n        exit =()=>{\n\n            this.props.upmeinfo(false)\n            this.setState({loginstate:false})\n            cookie.remove(\"token\")\n        }\n\n\n    render() {\n        const me = this.props.me;\n        window.scrollTo(0,0);\n\n        if(this.state.loginstate){\n            return (\n                <Fragment>\n    \n                    <div className =\"heardercontainer titlereduib\">\n                         <h3 className=\"hearder\">我的</h3>\n                    </div>\n                        \n            {/* <!-- channel --> */}\n                    <div className=\"channel\">\n                        <div className=\"channel-user\">\n                            <div className=\"mask\"></div><img src=\"images/bg-banner.jpg\" alt=\"\"/>\n                            <div className=\"user\"><img className=\"circle\" src={`http://${ServerIP}:${PublicPort}${me.userimgurl}`} alt=\"\"/>\n                                <h6>{me.username}</h6>\n                            </div>\n                        </div>\n    \n                        {/* <!-- 用户信息 --> */}\n                            <div className=\"segments-pageme\">\n                                <div className=\"container\">\n                                    <div className=\"collapse\">\n    \n                                        <ul className=\"collapsible viplist\" data-collapsible=\"accordion\">\n    \n                                            {/* <a href='#'> */}\n                                                <li onClick={()=>{alert('开发未完善,尽情期待...')}}>\n                                                    <div className=\"collapsible-header text-bold mebackgrouncolor\">\n                                                    <p className=\"rightp textcolor\">\n                                                    &nbsp;&nbsp;&nbsp;&nbsp; 下载Android/IOS客户端\n                                                    </p>\n                                                    <p className=\"rightp2 textcolor\">{\">\"}</p>\n                                                    </div>\n                                                </li>\n                                            {/* </a> */}\n\n                                            <Link to=\"/history\">\n                                                <li>\n                                                    <div className=\"collapsible-header text-bold mebackgrouncolor\">\n                                                    <p className=\"rightp textcolor\">\n                                                    &nbsp;&nbsp;&nbsp;&nbsp; 观看历史记录\n                                                    </p>\n                                                    <p className=\"rightp2 textcolor\">{\">\"}</p>\n                                                    </div>\n                                                </li>\n                                            </Link>\n    \n    \n    \n                                                <li>\n                                                    <div className=\"collapsible-header text-bold mebackgrouncolor\">\n                                                    <p className=\"rightp textcolor\">\n                                                    &nbsp;&nbsp;&nbsp;&nbsp; 会员等级: &nbsp;&nbsp;{me.viptype}\n                                                    </p>\n                                                    {/* <p className=\"rightp2\">{\">\"}</p> */}\n                                                    </div>\n                                                </li>\n    \n                                                <li>\n                                                    <div className=\"collapsible-header text-bold mebackgrouncolor\">\n                                                    <p className=\"rightp textcolor\">\n                                                    &nbsp;&nbsp;&nbsp;&nbsp; 会员有效期:&nbsp;&nbsp;{me.viptime}\n                                                    </p>\n                                                    {/* <p className=\"rightp2\">{\">\"}</p> */}\n                                                    </div>\n                                                </li>\n    \n    \n                                                <li>\n                                                    <div className=\"collapsible-header text-bold mebackgrouncolor\">\n                                                    <p className=\"rightp textcolor\">\n                                                    &nbsp;&nbsp;&nbsp;&nbsp; 账号:&nbsp;&nbsp;{me.number}\n                                                    </p>\n                                                    {/* <p className=\"rightp2\">{\">\"}</p> */}\n                                                    </div>\n                                                </li>\n    \n    \n                                            <Link to=\"/setuser\">\n                                                <li>\n                                                    <div className=\"collapsible-header text-bold mebackgrouncolor\">\n                                                    <p className=\"rightp textcolor\">\n                                                    &nbsp;&nbsp;&nbsp;&nbsp; 更改用户名及密码\n                                                    </p>\n                                                    <p className=\"rightp2 textcolor\">{\">\"}</p>\n                                                    </div>\n                                                </li>\n                                            </Link>\n    \n    \n                                            <Link to=\"/home\" onClick={this.exit}>\n                                                <li className=''>\n                                                    <div className=\"collapsible-header text-bold mebackgrouncolor\">\n                                                    <p className=\"rightp textcolor\">\n                                                    &nbsp;&nbsp;&nbsp;&nbsp; 退出登陆\n                                                    </p>\n                                                    <p className=\"rightp2 textcolor\">{\">\"}</p>\n                                                    </div>\n                                                </li>\n                                            </Link>\n    \n    \n                                        </ul>\n                                    </div>\n                                </div>\n                                <div style={{\"textAlign\":\"center\"}}>\n                                     <h4 className='textcolor'>提示⚠️</h4>\n                                     <h6 className='textcolor'>如果在浏览器观看! 请使用(Internet Explorer 9+, Firefox, Opera, Chrome, Safari)浏览器打开网页！否则视频将无法观看,或下载手机客户端进行观看!</h6>\n                                </div>\n                                \n                            </div>\n                    \n                            \n                    </div>\n                </Fragment>\n           )\n\n        }else{\n            return(\n                <Loding/>\n            )\n            \n        }\n       \n\n\n    }\n}\n\n\nexport default connect(\n    state =>({me:state.me}),\n    {upmeinfo}\n)(Me);\n","\nimport {UPLOGINSTATE} from '../contanter';\n\nexport const uploginstate = (data)=>{\n    return{type:UPLOGINSTATE,data:data}\n}","import React, { Component ,Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {uploginstate} from '../../redux/Axios/login';\nimport {upmeinfo} from '../../redux/Axios/me';\nimport {Link} from 'react-router-dom'\nimport axios from 'axios';\nimport {ServerIP,PublicPort} from '../../ServerIP';\nimport qs from 'qs'\nimport cookie from 'react-cookies'\n\n\n\nclass Login extends Component {\n\n    login = ()=>{\n            // 获取输入的信息\n            const  username = this.username.value;\n            const number = this.number.value;\n            const password = this.password.value;\n            if(username!==''&&number!==''&&password!==''){//检测是否输入框留空\n                \n                axios.post(`http://${ServerIP}:${PublicPort}/LOGIN`,qs.stringify({username,number,password})).then((response)=>{\n                    const data = response.data\n\n                    if(data.LoginState){\n                                         // 保存token到cookie中\n                                        //保存用户的数据到redux中\n                                        cookie.save(\"token\",data.user.token);\n                                        this.props.upmeinfo(data.user)\n                                        this.props.uploginstate(data.user)\n                                        this.props.history.goBack()\n                    }else{\n                     switch (data.ErrorCode) {\n                            case 0:\n                                alert('用户不存在,请注册')\n                                break;\n                            case 1:\n                                alert('账号不正确,请重新输入')\n                                break;\n                            case 2:\n                                alert('密码不正确,请重新输入')\n                                break;\n                            case 3:\n                                alert('用户名不正确,请重新输入')\n                                break;\n                            default:\n                                break;\n\n                        }\n\n\n                    }\n\n                }).catch((error)=>{\n                    console.log('网络请求失败',error)\n                })\n\n\n            }else{\n                alert('请检查输入是否正确');\n            }\n\n\n    }\n\n\n    render() {\n            return (\n                <Fragment>\n                        {/* <!-- sign in --> */}\n                        <div className=\"sign-in segments-page\">\n                            <div className=\"container\">\n                                <div className=\"signin-contents\">\n                                    <div className=\"pages-title\">\n                                        <h3 className='textcolor logintitle'>登 录</h3>\n                                        <div className=\"line\"></div>\n                                    </div>\n                                    <form className='textcolor'>\n                                        <input ref={(n)=>{this.username=n}} className='input' type=\"text\" placeholder=\"用户名\"/>\n                                        <input ref={(n)=>{this.number=n}} className='input' type=\"email\" placeholder=\"邮箱/电话号码\"/>\n                                        <input ref={(n)=>{this.password=n}} className='input' type=\"password\" placeholder=\"密码\"/>\n                                    </form>\n                                    \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"social-login\">\n                        <div className=\"row\">\n    \n                            <div className=\"col s6\">\n                                     <button onClick={this.login} className=\"button-full button-facebook loginbtnsize\">登录</button>\n                            </div>\n                            <div className=\"col s6\">\n                                    <Link to=\"/register\"><button className=\"button-full button-twitter loginbtnsize\">注册</button></Link>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n    \n                        </div>\n                     </div>\n    \n                </Fragment>\n            )            \n    }\n}\n\nexport default connect(\n    state=>({Login:state.login}),\n    {uploginstate,upmeinfo}\n)(Login)\n\n","import React, { Component ,Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {uploginstate} from '../../redux/Axios/login';\nimport {Link} from 'react-router-dom'\nimport axios from 'axios';\nimport {ServerIP,PublicPort} from '../../ServerIP';\nimport qs from 'qs';\nimport cookie from 'react-cookies'\nimport {upmeinfo} from '../../redux/Axios/me';\n\n\n\n\n\nclass Login extends Component {\n\n    state = {\n        login:1,\n        register:0,\n        \n    }\n\n\n\n    register = ()=>{\n            // 获取输入的信息\n            const  username = this.username.value;\n            const number = this.number.value;\n            const password = this.password.value;\n            const password2 = this.password2.value;\n            const code  = this.code.value;\n\n            if(username!==''&&number!==''&&password!==''&&password===password2){//检测是否输入框留空\n                const RegisterInfo = {username,number,password,password2,code}\n\n                axios.post(`http://${ServerIP}:${PublicPort}/REGISTER`,qs.stringify(RegisterInfo)).then((response)=>{\n\n                    const data = response.data;\n                    if(data.state){\n                        // 设置cookie\n                        cookie.save(\"token\",data.user.token);\n                        // 保存用户到me中\n                        this.props.upmeinfo(data.user)\n                        // 跳转到我的页面中国呢\n                        this.props.history.push('/me')\n\n                    }else{\n                        alert(data.msg)\n                    }\n\n\n\n                }).catch((error)=>{\n                    console.log('注册请求失败,稍后重试!',error);\n\n\n                })\n\n                \n            }else{\n                alert('请检查输入是否正确');\n            }\n\n\n    }\n\n    render() {\n            return (\n                <Fragment>\n                        {/* <!-- sign in --> */}\n                        <div className=\"sign-in segments-page\">\n                            <div className=\"container\">\n                                <div className=\"signin-contents\">\n                                    <div className=\"pages-title\">\n                                        <h3 className='textcolor logintitle'>注 册</h3>\n                                        <div className=\"line\"></div>\n                                    </div>\n                                    <form className='textcolor'>\n                                        <input ref={(n)=>{this.username=n}} className='input' type=\"text\" placeholder=\"用户名\"/>\n                                        <input ref={(n)=>{this.number=n}} className='input' type=\"email\" placeholder=\"邮箱/电话号码\"/>\n                                        <input ref={(n)=>{this.password=n}} className='input' type=\"password\" placeholder=\"密码\"/>\n                                        <input ref={(n)=>{this.password2=n}} className='input' type=\"password\" placeholder=\"确认密码\"/>\n                                        <input ref={(n)=>{this.code=n}} className='input' type=\"text\" placeholder=\"邀请码(选填)\"/>\n                                    </form>\n                                    \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"social-login\">\n                        <div className=\"row\">\n    \n                            <div className=\"col s6\">\n                                    <Link to='/login'> <button className=\"button-full button-facebook loginbtnsize\">登录</button></Link>\n                            </div>\n                            <div className=\"col s6\">\n                                    <button onClick={this.register} className=\"button-full button-twitter loginbtnsize\">注册</button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n    \n                        </div>\n                     </div>\n    \n                </Fragment>\n            )            \n    }\n}\n\n\nexport default connect(\n    state=>({Login:state.login}),\n    {uploginstate,upmeinfo}\n)(Login)\n\n","import React, { Component, Fragment } from 'react'\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport {ServerIP,PublicPort} from '../../ServerIP'\nimport qs from 'qs'\nimport cookie from 'react-cookies'\n\n\n\nclass SetUser extends Component {\n\n    \t// 返回\n\tback = ()=>{\n\t\tthis.props.history.goBack();\n\t}\n\n    Save=()=>{\n        const ME = this.props.me;\n\n        const token = cookie.load(\"token\");\n        const username = this.username.value;\n        const prep = this.passwordpre.value;\n        const pwd1 = this.password1.value;\n        const pwd2 = this.password2.value;\n        \n\n        if(prep!==\"\"&&pwd1!==\"\"&&pwd2!==\"\"&&username!==''){\n        if(pwd1===pwd2){\n            if(prep===ME.password){\n                    if(pwd1!==prep){\n\n                        // 发送请求让服务器更改\n                          const user = {username:username,password:pwd1,token:token}\n                            axios.post(`http://${ServerIP}:${PublicPort}/Saveuser`,qs.stringify(user))\n                                .then((response)=>{\n                                    alert(response.data.Message);\n                                    this.props.history.goBack();\n\n                                }).catch((err)=>{\n                                    console.log(err)\n                                })\n\n                        }else{\n                            alert('新密码不能与原密码一致！')\n                        }\n                }else{\n                    alert(\"原密码错误！\")\n                }\n        }else{\n            alert('新密码不一致！');\n        }\n    }else{\n        alert(\"请检查是否已经输入全部信息！\")\n    }\n\n\n\n\n\n    }\n\n\n    render() {\n\n        return (\n            <Fragment>\n\n            <div className =\"heardercontainer titlereduib\">\n            {/* <header className=\"narbaheader\"> */}\n                <div className=\"navBar1\">\n                    <span onClick={this.back} className=\"backsize1\" >\n                            {\"< \"}\n                    </span>\n                    <span onClick={this.back} className=\"backsize2\">\n                            {\"返回\"}\n                    </span>\n                </div>\n\t\t\t{/* </header> */}\n\t\t\t</div>\n\n\n\n                        <div className=\"segments-page\">\n                            <div className=\"container\">\n                                <div className=\"settings\">\n                                    <form>\n                                            <div style={{\"textAlign\":\"center\"}}>\n                                                    <h5 className='textcolor'>警告⚠️</h5>\n                                                    <br/>\n                                                    <h6 className='textcolor'>更改用户名和密码请注意保存,否则无法帮您找回!</h6>\n                                                    <br/>\n                                            </div>\n                                        姓名:<input className='inputredui' ref={(n)=>{this.username=n}} type=\"text\" />\n                                        原密码:<input className='inputredui' ref={(n)=>{this.passwordpre=n}} type=\"password\" />\n                                        新密码:<input className='inputredui' ref={(n)=>{this.password1=n}} type=\"password\" />\n                                        确认密码:<input className='inputredui' ref={(n)=>{this.password2=n}} type=\"password\"/>\n\n                                    </form>\n\n                                    <button onClick={this.Save} className=\"buttonsave \">保存更改</button>\n                                </div>\n                            </div>\n                        </div>\n                        \n            </Fragment>\n        )\n    }\n}\n\nexport default connect(\n    state =>({me:state.me}),\n    {}\n)(SetUser)","import React, { Component, Fragment } from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios'\nimport {ServerIP,PublicPort} from '../../ServerIP'\nimport qs from 'qs'\nimport cookie from 'react-cookies'\n\n\nclass Byvip extends Component {\n\n    state = {\n        msg1:\"已完成付款\",\n        msg2:\"已完成付款\",\n    }\n\n\n    constructor(props){\n        super(props);\n            //获取历史记录接口\n             if(props.user){\n             }else{\n                //  用户没有登陆返回我的页面\n                 props.history.push('/me')\n             }\n\n            \n    }\n\n\n      \t// 返回\n\tback = ()=>{\n\t\tthis.props.history.goBack();\n\t}\n\n    play1 = ()=>{\n        this.setState({msg1:\"正在为您查询...\",disabled:'disabled'});\n        this.netplay(\"微信\");\n        \n\n    }\n\n    play2 = ()=>{\n        this.setState({msg2:\"正在为您查询...\",disabled:\"disabled\"});\n        this.netplay(\"支付宝\");\n    }\n\n\n    netplay = (playtype)=>{\n        // 发起网络请求支付\n        var ByData = this.props.location.state\n            ByData.Bytype = playtype\n            ByData.username = this.props.user.username;\n            ByData.userid = this.props.user._id\n            ByData.token = cookie.load('token')\n\n\n        axios.post(`http://${ServerIP}:${PublicPort}/BYVIP`,qs.stringify(ByData))\n        .then((response)=>{\n                if(response.data.play===true){\n                    switch (playtype) {\n                        case \"微信\":\n                        this.setState({msg1:\"为您审核中...\"})\n                            break;\n                        case \"支付宝\":\n                            this.setState({msg2:\"为您审核中...\"})\n                            break;\n                        default:\n                            break;\n                    }\n\n                }else{\n                    this.setState({msg:\"未购买成功,请重试\"})\n                }\n        })\n        .catch((error)=>{\n            this.setState({msg:\"网络出错请稍后再试...\"})\n\n        })\n        \n    }\n\n    gome = ()=>{\n        this.props.history.push('/me')\n    }\n\n\n    render() {\n         window.scrollTo(0,0);\n            return (\n                <Fragment>\n                <div className =\"heardercontainer titlereduib\">\n                   <div className=\"navBar1\">\n                       <span onClick={this.back} className=\"backsize1\" >\n                               {\"< \"}\n                       </span>\n                       <span onClick={this.back} className=\"backsize2\">\n                               {\"返回\"}\n                       </span>\n                   </div>\n               </div>\n               <hr/>\n           <div className=\"segments-page\">\n               <div className=\"container\">\n                   <div className=\"row\">\n\n                      <div id=\"tabs1\" className=\"col s12\">\n                           <div className=\"contents-tabs\">\n                               <h3 className='textcolor'>提示:</h3>\n                               <h4 className='textcolor'>&nbsp;&nbsp;&nbsp;&nbsp;1、如需升级会员,请联系客服为您办理！ </h4>\n                               <h4 className='textcolor'>&nbsp;&nbsp;&nbsp;&nbsp;2、如以下方式未能完成支付或其他问题,请联系客服获取其他付款渠道！ </h4>\n                           </div>\n                       </div>\n                    <br/>\n                    <br/>\n                    <hr/>\n                       <div id=\"tabs1\" className=\"col s12\">\n                           <div className=\"contents-tabs\">\n                               <h4 className='textcolor'>微信支付</h4>\n                               <p>&nbsp;&nbsp;&nbsp;&nbsp;亲！如果您已完成转账、请点击 \"我已完成付款\" 按钮 系统将在5分钟内自动将您设置成所购买的会员类型、您返回到首页观看即可、祝您观看愉快！</p>\n                               <img src={`http://${ServerIP}:${PublicPort}${this.props.vip.qr1}`} alt=\"\"/>\n                               <button  disabled={this.state.disabled} onClick={this.play1} className=\"bybtn1\">{this.state.msg1}</button>\n                               <br/><br/><hr/>\n                           </div>\n                       </div>\n                       \n                       \n                       <div id=\"tabs2\" className=\"col s12\">\n                           <div className=\"contents-tabs\">\n                               <h4 className='textcolor'>支付宝</h4>\n                               <p>&nbsp;&nbsp;&nbsp;&nbsp;亲！如果您已完成转账、请点击 \"我已完成付款\" 按钮 系统将在5分钟内自动将您设置成所购买的会员类型、您返回到首页观看即可、祝您观看愉快！</p>\n                               <img src={`http://${ServerIP}:${PublicPort}${this.props.vip.qr2}`} alt=\"\"/>\n                               <br/>\n                               <br/>\n                               <button disabled={this.state.disabled} onClick={this.play2} className=\"bybtn2\">{this.state.msg2}</button>\n                           </div>\n                       </div>\n    \n    \n                   </div>\n               </div> \n                   <hr/>\n           </div>\n           \n               </Fragment>\n           );\n        \n    }\n}\n\n\nexport default connect(\n    state =>({vip:state.vip,user:state.me}),\n    {}\n)(Byvip)\n","import React, { Component, Fragment } from 'react'\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport { nanoid } from 'nanoid'\nimport {ServerIP,PublicPort} from '../../ServerIP'\nimport qs from 'qs'\nconst QRCode = require('qrcode.react');\n\n\nclass Qrcode extends Component {\n    constructor(props){\n        super(props);\n\n        // 在store中获取属于自己的qrnumber  如果没有生成国就随机生成一个\n            // const sys = store.getState()[3]; \n             const me = props.me\n\n                var code = me.code===\"\"?nanoid():me.code;\n                // 将nano 层的ip保存到服务器上\n                axios.post(`http://${ServerIP}:${PublicPort}/SaveCode`,qs.stringify({code:code,userid:me._id}))\n                .then((response)=>{\n                    // alert(\"邀请码更新成功\");\n                }).catch((e)=>{\n                    console.log('保存qrnumber失败',e);\n                })\n\n\n\n            this.state = {\n                code:code,\n                backgroundimg:'',\n            }\n    }\n\n    \t// 返回\n\tback = ()=>{\n\t\tthis.props.history.goBack();\n\t}\n\n    gologin = ()=>{\n        this.props.history.push('/me')\n    }\n\n\n\n    render() {\n        const loginstate = this.props.location.state.loginstate;\n        \n        if(loginstate){\n        return (\n            <Fragment>\n\n\t\t\t <div className =\"heardercontainer titlereduib\">\n\n                <div className=\"navBar1\">\n                    <span onClick={this.back} className=\"backsize1\" >\n                            {\"< \"}\n                    </span>\n                    <span onClick={this.back} className=\"backsize2\">\n                            {\"返回\"}\n                    </span>\n                </div>\n\t\t\t</div>\n            <hr/>\n\n                <div className=\"qrcontainer\">\n                    <div  className=\"qrcontainer1\">\n\t\t\t                 <QRCode  level=\"H\" value={`http://${ServerIP}:${PublicPort}`} style={{height:\"100%\",width:\"100%\",border:\"solid 20px white\"}}/>\n                             <h4 className='textcolor'>您邀请码为:</h4>\n                             <h4 className='textcolor'>{this.props.me.code}</h4>\n                    </div>\n                 </div>\n            </Fragment>\n        )\n        }else{\n            this.gologin();\n            return null\n        }\n\n\n    }\n}\n\n\nexport default connect(\n    state =>({me:state.me})\n)(Qrcode)","import React, { Component ,Fragment} from 'react';\nimport {Route,Switch, NavLink,Redirect} from 'react-router-dom'\nimport Home from '../../containers/Home'; // Home容器\nimport Video from '../../containers/Video';\nimport VideoList from '../../containers/VideoList';\nimport History from '../../containers/History';\nimport GroupList from '../../containers/GroupList';\nimport Vip from '../../containers/Vip';\nimport Me from '../../containers/Me';\nimport Login from '../../containers/Login';\nimport Register from '../../containers/Register';\nimport SetUser from '../../containers/SetUser';\nimport Byvip from '../../containers/Byvip';\nimport Qrcode from '../../containers/QrCode';\n\nclass Index extends Component {\n\n    render() {\n        return (\n            <Fragment>\n                    {/* 底部菜单栏 */}\n                <ul className=\"barUl titlereduit\">\n                    <li className=\"barLi\"><NavLink to='/home'  className=\"barA\"  activeclassname='active'>首页</NavLink></li>\n                    <li className=\"barLi\"><NavLink to='/group' className=\"barA\"  activeclassname='active'>主角</NavLink></li>\n                    <li className=\"barLi\"><NavLink to='/vip'   className=\"barA\"  activeclassname='active'>会员</NavLink></li>\n                    <li className=\"barLi\"><NavLink to='/me'    className=\"barA\"  activeclassname='active'>我的</NavLink></li>\n                </ul>\n\n\n                <Switch>\n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/group\" component={GroupList}/>\n                    <Route path=\"/vip\" component={Vip}/>\n                    <Route path=\"/me\" component={Me}/>\n                    <Route path=\"/video\" component={Video}/> \n                    <Route path=\"/videolist\" component={VideoList}/> \n                    <Route path=\"/history\" component={History}/> \n                    <Route path=\"/login\" component={Login}/> \n                    <Route path=\"/register\" component={Register}/>\n                    <Route path=\"/setuser\" component={SetUser}/>\n                    <Route path=\"/byvip\" component={Byvip}/>\n                    <Route path=\"/vipqr\" component={Qrcode}/>\n\n                    <Redirect to='/home'/>\n                </Switch>\n\n            </Fragment>\n        );\n    }\n}\n\nexport default Index;\n","import React, { Component } from 'react';\nimport NarBar from './components/NavBar';   //菜单栏\nimport axios from 'axios'\nimport { ServerIP, PublicPort } from './ServerIP'\n\n// 引入store 和axios\nimport store from './redux/store';\nimport {uphomedata} from './redux/Axios/home';\nimport {upgroups} from './redux/Axios/group';\nimport {upvip} from './redux/Axios/vip';\nimport Loding from './components/Loding';\n\n\nexport default class App extends Component {\n    state  = {\n        datastate:false\n    }\n\n\n\n    componentDidMount(){\n        // 发发送网络请求获取数据\n        // https://api.github.com/search/users?q=hack\n        // 请求中国、美国、韩国、日本的所有视频 类型为[]\n            // const token = cookie.load(\"token\");   \n        axios.post(`http://${ServerIP}:${PublicPort}/Appdata2`)\n        .then((response) => {\n            const Appdata = response.data;\n            // 更新所有数据\n            store.dispatch(uphomedata(Appdata.home))\n            store.dispatch(upgroups(Appdata.group))\n            store.dispatch(upvip(Appdata.sys))\n\n            this.setState({datastate:true})\n            \n\n        }).catch((error) => {\n            console.log('AppDatas:',error);\n            this.setState({datastate:false})\n\n        });\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n            {\n                this.state.datastate?<NarBar/>:<Loding/>\n            }\n            </div>\n        );\n    }\n}\n\n","import {UPGROUPS} from '../contanter';\n\nexport const upgroups = (data)=>{\n    return {type:UPGROUPS,data:data}    \n}","import ReactDOM from 'react-dom'\nimport App from './App'\nimport {BrowserRouter} from 'react-router-dom'\nimport store from './redux/store'\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n                <App/>\n        </BrowserRouter>\n    </Provider>\n\n    ,document.getElementById('root')\n);\n\n    "],"sourceRoot":""}